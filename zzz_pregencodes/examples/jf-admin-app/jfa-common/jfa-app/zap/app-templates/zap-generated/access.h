/*
 *
 *    Copyright (c) 2022 Project CHIP Authors
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

// THIS FILE IS GENERATED BY ZAP

// Prevent multiple inclusion
#pragma once

#include <access/Privilege.h>

// Prevent changing generated format
// clang-format off

////////////////////////////////////////////////////////////////////////////////

// Parallel array data (*cluster*, attribute, privilege) for read attribute
#define GENERATED_ACCESS_READ_ATTRIBUTE__CLUSTER { \
    /* Cluster: On/Off, Attribute: StartUpOnOff, Privilege: view */ \
    /* Cluster: Level Control, Attribute: StartUpCurrentLevel, Privilege: view */ \
    0x0000001F, /* Cluster: Access Control, Attribute: ACL, Privilege: administer */ \
    /* Cluster: OTA Software Update Requestor, Attribute: DefaultOTAProviders, Privilege: view */ \
    0x00000031, /* Cluster: Network Commissioning, Attribute: MaxNetworks, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Attribute: Networks, Privilege: administer */ \
    /* Cluster: Network Commissioning, Attribute: InterfaceEnabled, Privilege: view */ \
    0x00000031, /* Cluster: Network Commissioning, Attribute: LastNetworkingStatus, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Attribute: LastNetworkID, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Attribute: LastConnectErrorValue, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Attribute: NOCs, Privilege: administer */ \
    /* Cluster: Group Key Management, Attribute: GroupKeyMap, Privilege: view */ \
    /* Cluster: User Label, Attribute: LabelList, Privilege: view */ \
    /* Cluster: Color Control, Attribute: StartUpColorTemperatureMireds, Privilege: view */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: AnchorRootCA, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: AnchorNodeID, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: AnchorVendorID, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: FriendlyName, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: GroupKeySetList, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: GroupList, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: NodeList, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: AdminList, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: Status, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: EndpointGroupIDList, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: EndpointBindingList, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: NodeKeySetList, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: NodeACLList, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Attribute: NodeEndpointList, Privilege: administer */ \
    0x00000753, /* Cluster: Joint Fabric Administrator, Attribute: AdministratorFabricIndex, Privilege: administer */ \
}

// Parallel array data (cluster, *attribute*, privilege) for read attribute
#define GENERATED_ACCESS_READ_ATTRIBUTE__ATTRIBUTE { \
    /* Cluster: On/Off, Attribute: StartUpOnOff, Privilege: view */ \
    /* Cluster: Level Control, Attribute: StartUpCurrentLevel, Privilege: view */ \
    0x00000000, /* Cluster: Access Control, Attribute: ACL, Privilege: administer */ \
    /* Cluster: OTA Software Update Requestor, Attribute: DefaultOTAProviders, Privilege: view */ \
    0x00000000, /* Cluster: Network Commissioning, Attribute: MaxNetworks, Privilege: administer */ \
    0x00000001, /* Cluster: Network Commissioning, Attribute: Networks, Privilege: administer */ \
    /* Cluster: Network Commissioning, Attribute: InterfaceEnabled, Privilege: view */ \
    0x00000005, /* Cluster: Network Commissioning, Attribute: LastNetworkingStatus, Privilege: administer */ \
    0x00000006, /* Cluster: Network Commissioning, Attribute: LastNetworkID, Privilege: administer */ \
    0x00000007, /* Cluster: Network Commissioning, Attribute: LastConnectErrorValue, Privilege: administer */ \
    0x00000000, /* Cluster: Operational Credentials, Attribute: NOCs, Privilege: administer */ \
    /* Cluster: Group Key Management, Attribute: GroupKeyMap, Privilege: view */ \
    /* Cluster: User Label, Attribute: LabelList, Privilege: view */ \
    /* Cluster: Color Control, Attribute: StartUpColorTemperatureMireds, Privilege: view */ \
    0x00000000, /* Cluster: Joint Fabric Datastore, Attribute: AnchorRootCA, Privilege: administer */ \
    0x00000001, /* Cluster: Joint Fabric Datastore, Attribute: AnchorNodeID, Privilege: administer */ \
    0x00000002, /* Cluster: Joint Fabric Datastore, Attribute: AnchorVendorID, Privilege: administer */ \
    0x00000003, /* Cluster: Joint Fabric Datastore, Attribute: FriendlyName, Privilege: administer */ \
    0x00000004, /* Cluster: Joint Fabric Datastore, Attribute: GroupKeySetList, Privilege: administer */ \
    0x00000005, /* Cluster: Joint Fabric Datastore, Attribute: GroupList, Privilege: administer */ \
    0x00000006, /* Cluster: Joint Fabric Datastore, Attribute: NodeList, Privilege: administer */ \
    0x00000007, /* Cluster: Joint Fabric Datastore, Attribute: AdminList, Privilege: administer */ \
    0x00000008, /* Cluster: Joint Fabric Datastore, Attribute: Status, Privilege: administer */ \
    0x00000009, /* Cluster: Joint Fabric Datastore, Attribute: EndpointGroupIDList, Privilege: administer */ \
    0x0000000A, /* Cluster: Joint Fabric Datastore, Attribute: EndpointBindingList, Privilege: administer */ \
    0x0000000B, /* Cluster: Joint Fabric Datastore, Attribute: NodeKeySetList, Privilege: administer */ \
    0x0000000C, /* Cluster: Joint Fabric Datastore, Attribute: NodeACLList, Privilege: administer */ \
    0x0000000D, /* Cluster: Joint Fabric Datastore, Attribute: NodeEndpointList, Privilege: administer */ \
    0x00000000, /* Cluster: Joint Fabric Administrator, Attribute: AdministratorFabricIndex, Privilege: administer */ \
}

// Parallel array data (cluster, attribute, *privilege*) for read attribute
#define GENERATED_ACCESS_READ_ATTRIBUTE__PRIVILEGE { \
    /* Cluster: On/Off, Attribute: StartUpOnOff, Privilege: view */ \
    /* Cluster: Level Control, Attribute: StartUpCurrentLevel, Privilege: view */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Access Control, Attribute: ACL, Privilege: administer */ \
    /* Cluster: OTA Software Update Requestor, Attribute: DefaultOTAProviders, Privilege: view */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Attribute: MaxNetworks, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Attribute: Networks, Privilege: administer */ \
    /* Cluster: Network Commissioning, Attribute: InterfaceEnabled, Privilege: view */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Attribute: LastNetworkingStatus, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Attribute: LastNetworkID, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Attribute: LastConnectErrorValue, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Attribute: NOCs, Privilege: administer */ \
    /* Cluster: Group Key Management, Attribute: GroupKeyMap, Privilege: view */ \
    /* Cluster: User Label, Attribute: LabelList, Privilege: view */ \
    /* Cluster: Color Control, Attribute: StartUpColorTemperatureMireds, Privilege: view */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: AnchorRootCA, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: AnchorNodeID, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: AnchorVendorID, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: FriendlyName, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: GroupKeySetList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: GroupList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: NodeList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: AdminList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: Status, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: EndpointGroupIDList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: EndpointBindingList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: NodeKeySetList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: NodeACLList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Attribute: NodeEndpointList, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Administrator, Attribute: AdministratorFabricIndex, Privilege: administer */ \
}

////////////////////////////////////////////////////////////////////////////////

// Parallel array data (*cluster*, attribute, privilege) for write attribute
#define GENERATED_ACCESS_WRITE_ATTRIBUTE__CLUSTER { \
    0x00000006, /* Cluster: On/Off, Attribute: StartUpOnOff, Privilege: manage */ \
    0x00000008, /* Cluster: Level Control, Attribute: StartUpCurrentLevel, Privilege: manage */ \
    0x0000001F, /* Cluster: Access Control, Attribute: ACL, Privilege: administer */ \
    0x00000028, /* Cluster: Basic Information, Attribute: NodeLabel, Privilege: manage */ \
    0x00000028, /* Cluster: Basic Information, Attribute: Location, Privilege: administer */ \
    0x00000028, /* Cluster: Basic Information, Attribute: LocalConfigDisabled, Privilege: manage */ \
    0x0000002A, /* Cluster: OTA Software Update Requestor, Attribute: DefaultOTAProviders, Privilege: administer */ \
    0x0000002B, /* Cluster: Localization Configuration, Attribute: ActiveLocale, Privilege: manage */ \
    0x00000030, /* Cluster: General Commissioning, Attribute: Breadcrumb, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Attribute: InterfaceEnabled, Privilege: administer */ \
    0x0000003F, /* Cluster: Group Key Management, Attribute: GroupKeyMap, Privilege: manage */ \
    0x00000041, /* Cluster: User Label, Attribute: LabelList, Privilege: manage */ \
    0x00000300, /* Cluster: Color Control, Attribute: StartUpColorTemperatureMireds, Privilege: manage */ \
}

// Parallel array data (cluster, *attribute*, privilege) for write attribute
#define GENERATED_ACCESS_WRITE_ATTRIBUTE__ATTRIBUTE { \
    0x00004003, /* Cluster: On/Off, Attribute: StartUpOnOff, Privilege: manage */ \
    0x00004000, /* Cluster: Level Control, Attribute: StartUpCurrentLevel, Privilege: manage */ \
    0x00000000, /* Cluster: Access Control, Attribute: ACL, Privilege: administer */ \
    0x00000005, /* Cluster: Basic Information, Attribute: NodeLabel, Privilege: manage */ \
    0x00000006, /* Cluster: Basic Information, Attribute: Location, Privilege: administer */ \
    0x00000010, /* Cluster: Basic Information, Attribute: LocalConfigDisabled, Privilege: manage */ \
    0x00000000, /* Cluster: OTA Software Update Requestor, Attribute: DefaultOTAProviders, Privilege: administer */ \
    0x00000000, /* Cluster: Localization Configuration, Attribute: ActiveLocale, Privilege: manage */ \
    0x00000000, /* Cluster: General Commissioning, Attribute: Breadcrumb, Privilege: administer */ \
    0x00000004, /* Cluster: Network Commissioning, Attribute: InterfaceEnabled, Privilege: administer */ \
    0x00000000, /* Cluster: Group Key Management, Attribute: GroupKeyMap, Privilege: manage */ \
    0x00000000, /* Cluster: User Label, Attribute: LabelList, Privilege: manage */ \
    0x00004010, /* Cluster: Color Control, Attribute: StartUpColorTemperatureMireds, Privilege: manage */ \
}

// Parallel array data (cluster, attribute, *privilege*) for write attribute
#define GENERATED_ACCESS_WRITE_ATTRIBUTE__PRIVILEGE { \
    chip::Access::Privilege::kManage, /* Cluster: On/Off, Attribute: StartUpOnOff, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Level Control, Attribute: StartUpCurrentLevel, Privilege: manage */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Access Control, Attribute: ACL, Privilege: administer */ \
    chip::Access::Privilege::kManage, /* Cluster: Basic Information, Attribute: NodeLabel, Privilege: manage */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Basic Information, Attribute: Location, Privilege: administer */ \
    chip::Access::Privilege::kManage, /* Cluster: Basic Information, Attribute: LocalConfigDisabled, Privilege: manage */ \
    chip::Access::Privilege::kAdminister, /* Cluster: OTA Software Update Requestor, Attribute: DefaultOTAProviders, Privilege: administer */ \
    chip::Access::Privilege::kManage, /* Cluster: Localization Configuration, Attribute: ActiveLocale, Privilege: manage */ \
    chip::Access::Privilege::kAdminister, /* Cluster: General Commissioning, Attribute: Breadcrumb, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Attribute: InterfaceEnabled, Privilege: administer */ \
    chip::Access::Privilege::kManage, /* Cluster: Group Key Management, Attribute: GroupKeyMap, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: User Label, Attribute: LabelList, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Color Control, Attribute: StartUpColorTemperatureMireds, Privilege: manage */ \
}

////////////////////////////////////////////////////////////////////////////////

// Parallel array data (*cluster*, command, privilege) for invoke command
#define GENERATED_ACCESS_INVOKE_COMMAND__CLUSTER { \
    0x00000003, /* Cluster: Identify, Command: Identify, Privilege: manage */ \
    0x00000003, /* Cluster: Identify, Command: TriggerEffect, Privilege: manage */ \
    0x00000004, /* Cluster: Groups, Command: AddGroup, Privilege: manage */ \
    0x00000004, /* Cluster: Groups, Command: RemoveGroup, Privilege: manage */ \
    0x00000004, /* Cluster: Groups, Command: RemoveAllGroups, Privilege: manage */ \
    0x00000004, /* Cluster: Groups, Command: AddGroupIfIdentifying, Privilege: manage */ \
    0x00000030, /* Cluster: General Commissioning, Command: ArmFailSafe, Privilege: administer */ \
    0x00000030, /* Cluster: General Commissioning, Command: SetRegulatoryConfig, Privilege: administer */ \
    0x00000030, /* Cluster: General Commissioning, Command: CommissioningComplete, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Command: ScanNetworks, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Command: AddOrUpdateWiFiNetwork, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Command: AddOrUpdateThreadNetwork, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Command: RemoveNetwork, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Command: ConnectNetwork, Privilege: administer */ \
    0x00000031, /* Cluster: Network Commissioning, Command: ReorderNetwork, Privilege: administer */ \
    0x00000033, /* Cluster: General Diagnostics, Command: TestEventTrigger, Privilege: manage */ \
    0x00000034, /* Cluster: Software Diagnostics, Command: ResetWatermarks, Privilege: manage */ \
    0x00000035, /* Cluster: Thread Network Diagnostics, Command: ResetCounts, Privilege: manage */ \
    0x00000037, /* Cluster: Ethernet Network Diagnostics, Command: ResetCounts, Privilege: manage */ \
    0x0000003C, /* Cluster: Administrator Commissioning, Command: OpenCommissioningWindow, Privilege: administer */ \
    0x0000003C, /* Cluster: Administrator Commissioning, Command: RevokeCommissioning, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: AttestationRequest, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: CertificateChainRequest, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: CSRRequest, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: AddNOC, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: UpdateNOC, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: UpdateFabricLabel, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: RemoveFabric, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: AddTrustedRootCertificate, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: SetVIDVerificationStatement, Privilege: administer */ \
    0x0000003E, /* Cluster: Operational Credentials, Command: SignVIDVerificationRequest, Privilege: administer */ \
    0x0000003F, /* Cluster: Group Key Management, Command: KeySetWrite, Privilege: administer */ \
    0x0000003F, /* Cluster: Group Key Management, Command: KeySetRead, Privilege: administer */ \
    0x0000003F, /* Cluster: Group Key Management, Command: KeySetRemove, Privilege: administer */ \
    0x0000003F, /* Cluster: Group Key Management, Command: KeySetReadAllIndices, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: AddKeySet, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: UpdateKeySet, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: RemoveKeySet, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: AddGroup, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: UpdateGroup, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: RemoveGroup, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: AddAdmin, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: UpdateAdmin, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: RemoveAdmin, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: AddPendingNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: RefreshNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: UpdateNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: RemoveNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: UpdateEndpointForNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: AddGroupIDToEndpointForNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: RemoveGroupIDFromEndpointForNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: AddBindingToEndpointForNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: RemoveBindingFromEndpointForNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: AddACLToNode, Privilege: administer */ \
    0x00000752, /* Cluster: Joint Fabric Datastore, Command: RemoveACLFromNode, Privilege: administer */ \
    0x00000753, /* Cluster: Joint Fabric Administrator, Command: ICACCSRRequest, Privilege: administer */ \
    0x00000753, /* Cluster: Joint Fabric Administrator, Command: AddICAC, Privilege: administer */ \
    0x00000753, /* Cluster: Joint Fabric Administrator, Command: OpenJointCommissioningWindow, Privilege: administer */ \
    0x00000753, /* Cluster: Joint Fabric Administrator, Command: TransferAnchorRequest, Privilege: administer */ \
    0x00000753, /* Cluster: Joint Fabric Administrator, Command: TransferAnchorComplete, Privilege: administer */ \
    0x00000753, /* Cluster: Joint Fabric Administrator, Command: AnnounceJointFabricAdministrator, Privilege: administer */ \
}

// Parallel array data (cluster, *command*, privilege) for invoke command
#define GENERATED_ACCESS_INVOKE_COMMAND__COMMAND { \
    0x00000000, /* Cluster: Identify, Command: Identify, Privilege: manage */ \
    0x00000040, /* Cluster: Identify, Command: TriggerEffect, Privilege: manage */ \
    0x00000000, /* Cluster: Groups, Command: AddGroup, Privilege: manage */ \
    0x00000003, /* Cluster: Groups, Command: RemoveGroup, Privilege: manage */ \
    0x00000004, /* Cluster: Groups, Command: RemoveAllGroups, Privilege: manage */ \
    0x00000005, /* Cluster: Groups, Command: AddGroupIfIdentifying, Privilege: manage */ \
    0x00000000, /* Cluster: General Commissioning, Command: ArmFailSafe, Privilege: administer */ \
    0x00000002, /* Cluster: General Commissioning, Command: SetRegulatoryConfig, Privilege: administer */ \
    0x00000004, /* Cluster: General Commissioning, Command: CommissioningComplete, Privilege: administer */ \
    0x00000000, /* Cluster: Network Commissioning, Command: ScanNetworks, Privilege: administer */ \
    0x00000002, /* Cluster: Network Commissioning, Command: AddOrUpdateWiFiNetwork, Privilege: administer */ \
    0x00000003, /* Cluster: Network Commissioning, Command: AddOrUpdateThreadNetwork, Privilege: administer */ \
    0x00000004, /* Cluster: Network Commissioning, Command: RemoveNetwork, Privilege: administer */ \
    0x00000006, /* Cluster: Network Commissioning, Command: ConnectNetwork, Privilege: administer */ \
    0x00000008, /* Cluster: Network Commissioning, Command: ReorderNetwork, Privilege: administer */ \
    0x00000000, /* Cluster: General Diagnostics, Command: TestEventTrigger, Privilege: manage */ \
    0x00000000, /* Cluster: Software Diagnostics, Command: ResetWatermarks, Privilege: manage */ \
    0x00000000, /* Cluster: Thread Network Diagnostics, Command: ResetCounts, Privilege: manage */ \
    0x00000000, /* Cluster: Ethernet Network Diagnostics, Command: ResetCounts, Privilege: manage */ \
    0x00000000, /* Cluster: Administrator Commissioning, Command: OpenCommissioningWindow, Privilege: administer */ \
    0x00000002, /* Cluster: Administrator Commissioning, Command: RevokeCommissioning, Privilege: administer */ \
    0x00000000, /* Cluster: Operational Credentials, Command: AttestationRequest, Privilege: administer */ \
    0x00000002, /* Cluster: Operational Credentials, Command: CertificateChainRequest, Privilege: administer */ \
    0x00000004, /* Cluster: Operational Credentials, Command: CSRRequest, Privilege: administer */ \
    0x00000006, /* Cluster: Operational Credentials, Command: AddNOC, Privilege: administer */ \
    0x00000007, /* Cluster: Operational Credentials, Command: UpdateNOC, Privilege: administer */ \
    0x00000009, /* Cluster: Operational Credentials, Command: UpdateFabricLabel, Privilege: administer */ \
    0x0000000A, /* Cluster: Operational Credentials, Command: RemoveFabric, Privilege: administer */ \
    0x0000000B, /* Cluster: Operational Credentials, Command: AddTrustedRootCertificate, Privilege: administer */ \
    0x0000000C, /* Cluster: Operational Credentials, Command: SetVIDVerificationStatement, Privilege: administer */ \
    0x0000000D, /* Cluster: Operational Credentials, Command: SignVIDVerificationRequest, Privilege: administer */ \
    0x00000000, /* Cluster: Group Key Management, Command: KeySetWrite, Privilege: administer */ \
    0x00000001, /* Cluster: Group Key Management, Command: KeySetRead, Privilege: administer */ \
    0x00000003, /* Cluster: Group Key Management, Command: KeySetRemove, Privilege: administer */ \
    0x00000004, /* Cluster: Group Key Management, Command: KeySetReadAllIndices, Privilege: administer */ \
    0x00000000, /* Cluster: Joint Fabric Datastore, Command: AddKeySet, Privilege: administer */ \
    0x00000001, /* Cluster: Joint Fabric Datastore, Command: UpdateKeySet, Privilege: administer */ \
    0x00000002, /* Cluster: Joint Fabric Datastore, Command: RemoveKeySet, Privilege: administer */ \
    0x00000003, /* Cluster: Joint Fabric Datastore, Command: AddGroup, Privilege: administer */ \
    0x00000004, /* Cluster: Joint Fabric Datastore, Command: UpdateGroup, Privilege: administer */ \
    0x00000005, /* Cluster: Joint Fabric Datastore, Command: RemoveGroup, Privilege: administer */ \
    0x00000006, /* Cluster: Joint Fabric Datastore, Command: AddAdmin, Privilege: administer */ \
    0x00000007, /* Cluster: Joint Fabric Datastore, Command: UpdateAdmin, Privilege: administer */ \
    0x00000008, /* Cluster: Joint Fabric Datastore, Command: RemoveAdmin, Privilege: administer */ \
    0x00000009, /* Cluster: Joint Fabric Datastore, Command: AddPendingNode, Privilege: administer */ \
    0x0000000A, /* Cluster: Joint Fabric Datastore, Command: RefreshNode, Privilege: administer */ \
    0x0000000B, /* Cluster: Joint Fabric Datastore, Command: UpdateNode, Privilege: administer */ \
    0x0000000C, /* Cluster: Joint Fabric Datastore, Command: RemoveNode, Privilege: administer */ \
    0x0000000D, /* Cluster: Joint Fabric Datastore, Command: UpdateEndpointForNode, Privilege: administer */ \
    0x0000000E, /* Cluster: Joint Fabric Datastore, Command: AddGroupIDToEndpointForNode, Privilege: administer */ \
    0x0000000F, /* Cluster: Joint Fabric Datastore, Command: RemoveGroupIDFromEndpointForNode, Privilege: administer */ \
    0x00000010, /* Cluster: Joint Fabric Datastore, Command: AddBindingToEndpointForNode, Privilege: administer */ \
    0x00000011, /* Cluster: Joint Fabric Datastore, Command: RemoveBindingFromEndpointForNode, Privilege: administer */ \
    0x00000012, /* Cluster: Joint Fabric Datastore, Command: AddACLToNode, Privilege: administer */ \
    0x00000013, /* Cluster: Joint Fabric Datastore, Command: RemoveACLFromNode, Privilege: administer */ \
    0x00000000, /* Cluster: Joint Fabric Administrator, Command: ICACCSRRequest, Privilege: administer */ \
    0x00000002, /* Cluster: Joint Fabric Administrator, Command: AddICAC, Privilege: administer */ \
    0x00000004, /* Cluster: Joint Fabric Administrator, Command: OpenJointCommissioningWindow, Privilege: administer */ \
    0x00000005, /* Cluster: Joint Fabric Administrator, Command: TransferAnchorRequest, Privilege: administer */ \
    0x00000007, /* Cluster: Joint Fabric Administrator, Command: TransferAnchorComplete, Privilege: administer */ \
    0x00000008, /* Cluster: Joint Fabric Administrator, Command: AnnounceJointFabricAdministrator, Privilege: administer */ \
}

// Parallel array data (cluster, command, *privilege*) for invoke command
#define GENERATED_ACCESS_INVOKE_COMMAND__PRIVILEGE { \
    chip::Access::Privilege::kManage, /* Cluster: Identify, Command: Identify, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Identify, Command: TriggerEffect, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Groups, Command: AddGroup, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Groups, Command: RemoveGroup, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Groups, Command: RemoveAllGroups, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Groups, Command: AddGroupIfIdentifying, Privilege: manage */ \
    chip::Access::Privilege::kAdminister, /* Cluster: General Commissioning, Command: ArmFailSafe, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: General Commissioning, Command: SetRegulatoryConfig, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: General Commissioning, Command: CommissioningComplete, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Command: ScanNetworks, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Command: AddOrUpdateWiFiNetwork, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Command: AddOrUpdateThreadNetwork, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Command: RemoveNetwork, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Command: ConnectNetwork, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Network Commissioning, Command: ReorderNetwork, Privilege: administer */ \
    chip::Access::Privilege::kManage, /* Cluster: General Diagnostics, Command: TestEventTrigger, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Software Diagnostics, Command: ResetWatermarks, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Thread Network Diagnostics, Command: ResetCounts, Privilege: manage */ \
    chip::Access::Privilege::kManage, /* Cluster: Ethernet Network Diagnostics, Command: ResetCounts, Privilege: manage */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Administrator Commissioning, Command: OpenCommissioningWindow, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Administrator Commissioning, Command: RevokeCommissioning, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: AttestationRequest, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: CertificateChainRequest, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: CSRRequest, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: AddNOC, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: UpdateNOC, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: UpdateFabricLabel, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: RemoveFabric, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: AddTrustedRootCertificate, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: SetVIDVerificationStatement, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Operational Credentials, Command: SignVIDVerificationRequest, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Group Key Management, Command: KeySetWrite, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Group Key Management, Command: KeySetRead, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Group Key Management, Command: KeySetRemove, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Group Key Management, Command: KeySetReadAllIndices, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: AddKeySet, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: UpdateKeySet, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: RemoveKeySet, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: AddGroup, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: UpdateGroup, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: RemoveGroup, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: AddAdmin, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: UpdateAdmin, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: RemoveAdmin, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: AddPendingNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: RefreshNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: UpdateNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: RemoveNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: UpdateEndpointForNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: AddGroupIDToEndpointForNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: RemoveGroupIDFromEndpointForNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: AddBindingToEndpointForNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: RemoveBindingFromEndpointForNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: AddACLToNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Datastore, Command: RemoveACLFromNode, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Administrator, Command: ICACCSRRequest, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Administrator, Command: AddICAC, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Administrator, Command: OpenJointCommissioningWindow, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Administrator, Command: TransferAnchorRequest, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Administrator, Command: TransferAnchorComplete, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Joint Fabric Administrator, Command: AnnounceJointFabricAdministrator, Privilege: administer */ \
}

////////////////////////////////////////////////////////////////////////////////

// Parallel array data (*cluster*, event, privilege) for read event
#define GENERATED_ACCESS_READ_EVENT__CLUSTER { \
    0x0000001F, /* Cluster: Access Control, Event: AccessControlEntryChanged, Privilege: administer */ \
    0x0000001F, /* Cluster: Access Control, Event: AccessControlExtensionChanged, Privilege: administer */ \
    0x0000001F, /* Cluster: Access Control, Event: FabricRestrictionReviewUpdate, Privilege: administer */ \
}

// Parallel array data (cluster, *event*, privilege) for read event
#define GENERATED_ACCESS_READ_EVENT__EVENT { \
    0x00000000, /* Cluster: Access Control, Event: AccessControlEntryChanged, Privilege: administer */ \
    0x00000001, /* Cluster: Access Control, Event: AccessControlExtensionChanged, Privilege: administer */ \
    0x00000002, /* Cluster: Access Control, Event: FabricRestrictionReviewUpdate, Privilege: administer */ \
}

// Parallel array data (cluster, event, *privilege*) for read event
#define GENERATED_ACCESS_READ_EVENT__PRIVILEGE { \
    chip::Access::Privilege::kAdminister, /* Cluster: Access Control, Event: AccessControlEntryChanged, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Access Control, Event: AccessControlExtensionChanged, Privilege: administer */ \
    chip::Access::Privilege::kAdminister, /* Cluster: Access Control, Event: FabricRestrictionReviewUpdate, Privilege: administer */ \
}

////////////////////////////////////////////////////////////////////////////////

// clang-format on
